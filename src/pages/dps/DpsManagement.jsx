import React, { useEffect, useState } from "react";
import axios from "axios";
import Swal from "sweetalert2";

const DpsManagement = () => {
    const [schemes, setSchemes] = useState([]);
    const [loading, setLoading] = useState(true);
console.log(schemes)
    // üîπ Data Load Function
    const fetchData = async () => {
        try {
            const res = await axios.get(`${import.meta.env.VITE_BASE_URL}/api/dps-management`);
            setSchemes(res.data);
        } catch (err) {
            console.error(err);
            Swal.fire("‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø!", "‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", "error");
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchData();
    }, []);

    // üóëÔ∏è DPS ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßã
    const handleDelete = async (id, name) => {
        Swal.fire({
            title: `${name} ‡¶∏‡ßç‡¶ï‡¶ø‡¶Æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?`,
            text: "‡¶è‡¶á ‡¶∏‡ßç‡¶ï‡¶ø‡¶Æ‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‡¶™‡ßÅ‡¶®‡¶∞‡ßÅ‡¶¶‡ßç‡¶ß‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡¶æ!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®",
            cancelButtonText: "‡¶¨‡¶æ‡¶§‡¶ø‡¶≤",
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    await axios.delete(`${import.meta.env.VITE_BASE_URL}/api/dps-management/${id}`);
                    Swal.fire("‡¶∏‡¶´‡¶≤!", "DPS ‡¶∏‡ßç‡¶ï‡¶ø‡¶Æ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", "success");
                    fetchData(); // Refresh table
                } catch (err) {
                    console.error(err);
                    Swal.fire("‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø!", "DPS ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§", "error");
                }
            }
        });
    };

    if (loading)
        return <div className="p-6 text-center text-gray-600 font-medium">‚è≥ ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</div>;

    return (
        <div className="p-6">
            <h1 className="text-2xl font-bold mb-6">üíº DPS ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ</h1>

            <div className="overflow-x-auto bg-white rounded-lg shadow-lg">
                <table className="min-w-full text-sm">
                    <thead className="bg-indigo-100 text-gray-800">
                        <tr>
                            <th className="p-3 text-left">#</th>
                            <th className="p-3 text-left">‡¶∏‡ßç‡¶ï‡¶ø‡¶Æ ‡¶®‡¶æ‡¶Æ</th>
                            <th className="p-3 text-left">‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</th>
                            <th className="p-3 text-left">‡¶Æ‡ßá‡¶Ø‡¶º‡¶æ‡¶¶</th>
                            <th className="p-3 text-left">‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£</th>
                            <th className="p-3 text-left">‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü</th>
                            <th className="p-3 text-left">‡¶Æ‡ßã‡¶ü ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø</th>
                            <th className="p-3 text-left">‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ</th>
                            <th className="p-3 text-center">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th>
                        </tr>
                    </thead>

                    <tbody>
                        {schemes.length > 0 ? (
                            schemes.map((s, i) => (
                                <tr key={s._id} className="border-b hover:bg-gray-50">
                                    <td className="p-3">{i + 1}</td>
                                    <td className="p-3 font-medium">{s.schemeName}</td>
                                    <td className="p-3">
                                        {s.startDate

                                            ? new Date(s.
                                                startDate).toLocaleDateString("bn-BD")
                                            : "‚Äî"}
                                    </td>
                                    <td className="p-3">{s.durationMonths} ‡¶Æ‡¶æ‡¶∏</td>
                                    <td className="p-3">‡ß≥{s.monthlyAmount}</td>
                                    <td className="p-3">‡ß≥{s.targetAmount}</td>
                                    <td className="p-3">{s.totalMembers}</td>
                                    <td className="p-3">
                                        <span
                                            className={`px-3 py-1 rounded-full text-xs ${s.status === "active"
                                                    ? "bg-green-100 text-green-700"
                                                    : "bg-red-100 text-red-700"
                                                }`}
                                        >
                                            {s.status === "active" ? "‡¶ö‡¶≤‡¶Æ‡¶æ‡¶®" : "‡¶¨‡¶®‡ßç‡¶ß"}
                                        </span>
                                    </td>
                                    <td className="p-3 text-center">
                                        <button
                                            onClick={() => handleDelete(s._id, s.schemeName)}
                                            className="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md text-xs"
                                        >
                                            DPS ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
                                        </button>
                                    </td>
                                </tr>
                            ))
                        ) : (
                            <tr>
                                <td colSpan="9" className="text-center py-6 text-gray-500">
                                    ‡¶ï‡ßã‡¶®‡ßã DPS ‡¶∏‡ßç‡¶ï‡¶ø‡¶Æ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§
                                </td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>
        </div>
    );
};

export default DpsManagement;
